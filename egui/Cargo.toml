[package]
name = "eframe_template"
version = "0.1.0"
authors = ["YCCD <me@yccd.cc>"]
edition = "2021"
# rust-version = "1.72"
[dependencies]
egui = "0.27.0"
eframe = { version = "0.27.0", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
egui_extras = "0.27.2"
core = { path = "../core"}
anyhow = "1.0.82"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.10"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"


# [profile.release]
# # opt-level = 3 # fast and small wasm
# panic = 'abort'
# opt-level = 'z'
# lto = true

# # Optimize all dependencies even in debug builds:
# [profile.dev.package."*"]
# opt-level = 2


# [patch.crates-io]

# [unstable]
# build-std = ["std", "panic_abort", "core", "alloc"]
# build-std-features = ["panic_immediate_abort"]
# # If you want to use the bleeding edge version of egui and eframe:
# # egui = { git = "https://github.com/emilk/egui", branch = "master" }
# # eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# # If you fork https://github.com/emilk/egui you can test with:
# # egui = { path = "../egui/crates/egui" }
# # eframe = { path = "../egui/crates/eframe" }
